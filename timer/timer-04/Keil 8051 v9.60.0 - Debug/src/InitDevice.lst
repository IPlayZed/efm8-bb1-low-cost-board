C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 11:38:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\timer\timer-04\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\m
                    -iclab-zh-1\efm8-bb1-low-cost-board\timer\timer-04\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Dev
                    -ice/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_1_enter_DefaultMode_from_RESET ();
  28   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  29   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  30   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  31   1        // [Config Calls]$
  32   1      
  33   1      }
  34          
  35          extern void
  36          WDT_0_enter_DefaultMode_from_RESET (void)
  37          {
  38   1        // $[Watchdog Timer Init Variable Declarations]
  39   1        uint32_t i;
  40   1        bool ea;
  41   1        // [Watchdog Timer Init Variable Declarations]$
  42   1      
  43   1        // $[WDTCN - Watchdog Timer Control]
  44   1        // Deprecated
  45   1        // [WDTCN - Watchdog Timer Control]$
  46   1      
  47   1        // $[WDTCN_2 - Watchdog Timer Control]
  48   1      
  49   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  50   1        WDTCN = 0xA5;
  51   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 11:38:03 PAGE 2   

  52   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  53   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  54   1          {
  55   2            NOP ();
  56   2          }
  57   1      
  58   1        // Disable WDT
  59   1        ea = IE_EA;
  60   1        IE_EA = 0;
  61   1        WDTCN = 0xDE;
  62   1        WDTCN = 0xAD;
  63   1        IE_EA = ea;
  64   1      
  65   1        // [WDTCN_2 - Watchdog Timer Control]$
  66   1      
  67   1      }
  68          
  69          extern void
  70          PBCFG_0_enter_DefaultMode_from_RESET (void)
  71          {
  72   1        // $[XBR2 - Port I/O Crossbar 2]
  73   1        /***********************************************************************
  74   1         - Weak Pullups enabled 
  75   1         - Crossbar enabled
  76   1         ***********************************************************************/
  77   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  78   1        // [XBR2 - Port I/O Crossbar 2]$
  79   1      
  80   1        // $[PRTDRV - Port Drive Strength]
  81   1        // [PRTDRV - Port Drive Strength]$
  82   1      
  83   1        // $[XBR0 - Port I/O Crossbar 0]
  84   1        // [XBR0 - Port I/O Crossbar 0]$
  85   1      
  86   1        // $[XBR1 - Port I/O Crossbar 1]
  87   1        // [XBR1 - Port I/O Crossbar 1]$
  88   1      
  89   1      }
  90          
  91          extern void
  92          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
  93          {
  94   1        // $[CKCON0 - Clock Control 0]
  95   1        /***********************************************************************
  96   1         - System clock divided by 48
  97   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
  98   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
  99   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 100   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 101   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 102   1         - Timer 1 uses the clock defined by the prescale field, SCA
 103   1         ***********************************************************************/
 104   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 105   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 106   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 107   1            | CKCON0_T1M__PRESCALE;
 108   1        // [CKCON0 - Clock Control 0]$
 109   1      
 110   1        // $[TMOD - Timer 0/1 Mode]
 111   1        // [TMOD - Timer 0/1 Mode]$
 112   1      
 113   1        // $[TCON - Timer 0/1 Control]
 114   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 11:38:03 PAGE 3   

 115   1         - Start Timer 0 running
 116   1         ***********************************************************************/
 117   1        TCON |= TCON_TR0__RUN;
 118   1        // [TCON - Timer 0/1 Control]$
 119   1      
 120   1      }
 121          
 122          extern void
 123          PORTS_1_enter_DefaultMode_from_RESET (void)
 124          {
 125   1        // $[P1 - Port 1 Pin Latch]
 126   1        // [P1 - Port 1 Pin Latch]$
 127   1      
 128   1        // $[P1MDOUT - Port 1 Output Mode]
 129   1        /***********************************************************************
 130   1         - P1.0 output is open-drain
 131   1         - P1.1 output is open-drain
 132   1         - P1.2 output is open-drain
 133   1         - P1.3 output is open-drain
 134   1         - P1.4 output is push-pull
 135   1         - P1.5 output is open-drain
 136   1         - P1.6 output is open-drain
 137   1         - P1.7 output is open-drain
 138   1         ***********************************************************************/
 139   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 140   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 141   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 142   1            | P1MDOUT_B7__OPEN_DRAIN;
 143   1        // [P1MDOUT - Port 1 Output Mode]$
 144   1      
 145   1        // $[P1MDIN - Port 1 Input Mode]
 146   1        // [P1MDIN - Port 1 Input Mode]$
 147   1      
 148   1        // $[P1SKIP - Port 1 Skip]
 149   1        // [P1SKIP - Port 1 Skip]$
 150   1      
 151   1        // $[P1MASK - Port 1 Mask]
 152   1        // [P1MASK - Port 1 Mask]$
 153   1      
 154   1        // $[P1MAT - Port 1 Match]
 155   1        // [P1MAT - Port 1 Match]$
 156   1      
 157   1      }
 158          
 159          extern void
 160          TIMER01_0_enter_DefaultMode_from_RESET (void)
 161          {
 162   1        // $[Timer Initialization]
 163   1        //Save Timer Configuration
 164   1        uint8_t TCON_save;
 165   1        TCON_save = TCON;
 166   1        //Stop Timers
 167   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 168   1      
 169   1        // [Timer Initialization]$
 170   1      
 171   1        // $[TH0 - Timer 0 High Byte]
 172   1        /***********************************************************************
 173   1         - Timer 0 High Byte = 0x80
 174   1         ***********************************************************************/
 175   1        TH0 = (0x80 << TH0_TH0__SHIFT);
 176   1        // [TH0 - Timer 0 High Byte]$
 177   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 11:38:03 PAGE 4   

 178   1        // $[TL0 - Timer 0 Low Byte]
 179   1        // [TL0 - Timer 0 Low Byte]$
 180   1      
 181   1        // $[TH1 - Timer 1 High Byte]
 182   1        // [TH1 - Timer 1 High Byte]$
 183   1      
 184   1        // $[TL1 - Timer 1 Low Byte]
 185   1        // [TL1 - Timer 1 Low Byte]$
 186   1      
 187   1        // $[Timer Restoration]
 188   1        //Restore Timer Configuration
 189   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 190   1      
 191   1        // [Timer Restoration]$
 192   1      
 193   1      }
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 14:20:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\timer\timer-05\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\m
                    -iclab-zh-1\efm8-bb1-low-cost-board\timer\timer-05\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Dev
                    -ice/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\Ini
                    -tDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  28   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  29   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  30   1        // [Config Calls]$
  31   1      
  32   1      }
  33          
  34          extern void
  35          WDT_0_enter_DefaultMode_from_RESET (void)
  36          {
  37   1        // $[Watchdog Timer Init Variable Declarations]
  38   1        uint32_t i;
  39   1        bool ea;
  40   1        // [Watchdog Timer Init Variable Declarations]$
  41   1      
  42   1        // $[WDTCN - Watchdog Timer Control]
  43   1        // Deprecated
  44   1        // [WDTCN - Watchdog Timer Control]$
  45   1      
  46   1        // $[WDTCN_2 - Watchdog Timer Control]
  47   1      
  48   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  49   1        WDTCN = 0xA5;
  50   1      
  51   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 14:20:47 PAGE 2   

  52   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  53   1          {
  54   2            NOP ();
  55   2          }
  56   1      
  57   1        // Disable WDT
  58   1        ea = IE_EA;
  59   1        IE_EA = 0;
  60   1        WDTCN = 0xDE;
  61   1        WDTCN = 0xAD;
  62   1        IE_EA = ea;
  63   1      
  64   1        // [WDTCN_2 - Watchdog Timer Control]$
  65   1      
  66   1      }
  67          
  68          extern void
  69          PBCFG_0_enter_DefaultMode_from_RESET (void)
  70          {
  71   1        // $[XBR2 - Port I/O Crossbar 2]
  72   1        /***********************************************************************
  73   1         - Weak Pullups enabled 
  74   1         - Crossbar enabled
  75   1         ***********************************************************************/
  76   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  77   1        // [XBR2 - Port I/O Crossbar 2]$
  78   1      
  79   1        // $[PRTDRV - Port Drive Strength]
  80   1        // [PRTDRV - Port Drive Strength]$
  81   1      
  82   1        // $[XBR0 - Port I/O Crossbar 0]
  83   1        // [XBR0 - Port I/O Crossbar 0]$
  84   1      
  85   1        // $[XBR1 - Port I/O Crossbar 1]
  86   1        // [XBR1 - Port I/O Crossbar 1]$
  87   1      
  88   1      }
  89          
  90          extern void
  91          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
  92          {
  93   1        // $[CKCON0 - Clock Control 0]
  94   1        // [CKCON0 - Clock Control 0]$
  95   1      
  96   1        // $[TMOD - Timer 0/1 Mode]
  97   1        // [TMOD - Timer 0/1 Mode]$
  98   1      
  99   1        // $[TCON - Timer 0/1 Control]
 100   1        /***********************************************************************
 101   1         - Start Timer 0 running
 102   1         ***********************************************************************/
 103   1        TCON |= TCON_TR0__RUN;
 104   1        // [TCON - Timer 0/1 Control]$
 105   1      
 106   1      }
 107          
 108          extern void
 109          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 110          {
 111   1        // $[EIE1 - Extended Interrupt Enable 1]
 112   1        // [EIE1 - Extended Interrupt Enable 1]$
 113   1      
 114   1        // $[EIP1 - Extended Interrupt Priority 1]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/23/2021 14:20:47 PAGE 3   

 115   1        // [EIP1 - Extended Interrupt Priority 1]$
 116   1      
 117   1        // $[IE - Interrupt Enable]
 118   1        /***********************************************************************
 119   1         - Enable each interrupt according to its individual mask setting
 120   1         - Disable external interrupt 0
 121   1         - Disable external interrupt 1
 122   1         - Disable all SPI0 interrupts
 123   1         - Enable interrupt requests generated by the TF0 flag
 124   1         - Disable all Timer 1 interrupt
 125   1         - Disable Timer 2 interrupt
 126   1         - Disable UART0 interrupt
 127   1         ***********************************************************************/
 128   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 129   1            | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 130   1            | IE_ES0__DISABLED;
 131   1        // [IE - Interrupt Enable]$
 132   1      
 133   1        // $[IP - Interrupt Priority]
 134   1        // [IP - Interrupt Priority]$
 135   1      
 136   1      }
 137          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     97    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

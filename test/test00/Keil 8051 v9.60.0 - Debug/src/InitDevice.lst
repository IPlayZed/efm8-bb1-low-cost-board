C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/24/2021 16:35:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\test\test00\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNING
                    -LEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\micl
                    -ab-zh-1\efm8-bb1-low-cost-board\test\test00\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/sh
                    -ared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDevic
                    -e.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_1_enter_DefaultMode_from_RESET ();
  28   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  29   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  30   1        // [Config Calls]$
  31   1      
  32   1      }
  33          
  34          extern void
  35          WDT_0_enter_DefaultMode_from_RESET (void)
  36          {
  37   1        // $[Watchdog Timer Init Variable Declarations]
  38   1        uint32_t i;
  39   1        bool ea;
  40   1        // [Watchdog Timer Init Variable Declarations]$
  41   1      
  42   1        // $[WDTCN - Watchdog Timer Control]
  43   1        // Deprecated
  44   1        // [WDTCN - Watchdog Timer Control]$
  45   1      
  46   1        // $[WDTCN_2 - Watchdog Timer Control]
  47   1      
  48   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  49   1        WDTCN = 0xA5;
  50   1      
  51   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/24/2021 16:35:59 PAGE 2   

  52   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  53   1          {
  54   2            NOP ();
  55   2          }
  56   1      
  57   1        // Disable WDT
  58   1        ea = IE_EA;
  59   1        IE_EA = 0;
  60   1        WDTCN = 0xDE;
  61   1        WDTCN = 0xAD;
  62   1        IE_EA = ea;
  63   1      
  64   1        // [WDTCN_2 - Watchdog Timer Control]$
  65   1      
  66   1      }
  67          
  68          extern void
  69          PBCFG_0_enter_DefaultMode_from_RESET (void)
  70          {
  71   1        // $[XBR2 - Port I/O Crossbar 2]
  72   1        /***********************************************************************
  73   1         - Weak Pullups enabled 
  74   1         - Crossbar enabled
  75   1         ***********************************************************************/
  76   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  77   1        // [XBR2 - Port I/O Crossbar 2]$
  78   1      
  79   1        // $[PRTDRV - Port Drive Strength]
  80   1        // [PRTDRV - Port Drive Strength]$
  81   1      
  82   1        // $[XBR0 - Port I/O Crossbar 0]
  83   1        // [XBR0 - Port I/O Crossbar 0]$
  84   1      
  85   1        // $[XBR1 - Port I/O Crossbar 1]
  86   1        // [XBR1 - Port I/O Crossbar 1]$
  87   1      
  88   1      }
  89          
  90          extern void
  91          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
  92          {
  93   1        // $[CKCON0 - Clock Control 0]
  94   1        // [CKCON0 - Clock Control 0]$
  95   1      
  96   1        // $[TMOD - Timer 0/1 Mode]
  97   1        /***********************************************************************
  98   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
  99   1         - Mode 0, 13-bit Counter/Timer
 100   1         - Timer Mode
 101   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 102   1         - Timer Mode
 103   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 104   1         ***********************************************************************/
 105   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 106   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 107   1        // [TMOD - Timer 0/1 Mode]$
 108   1      
 109   1        // $[TCON - Timer 0/1 Control]
 110   1        /***********************************************************************
 111   1         - Start Timer 0 running
 112   1         ***********************************************************************/
 113   1        TCON |= TCON_TR0__RUN;
 114   1        // [TCON - Timer 0/1 Control]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/24/2021 16:35:59 PAGE 3   

 115   1      
 116   1      }
 117          
 118          extern void
 119          PORTS_1_enter_DefaultMode_from_RESET (void)
 120          {
 121   1        // $[P1 - Port 1 Pin Latch]
 122   1        // [P1 - Port 1 Pin Latch]$
 123   1      
 124   1        // $[P1MDOUT - Port 1 Output Mode]
 125   1        /***********************************************************************
 126   1         - P1.0 output is open-drain
 127   1         - P1.1 output is open-drain
 128   1         - P1.2 output is open-drain
 129   1         - P1.3 output is open-drain
 130   1         - P1.4 output is push-pull
 131   1         - P1.5 output is open-drain
 132   1         - P1.6 output is open-drain
 133   1         - P1.7 output is open-drain
 134   1         ***********************************************************************/
 135   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 136   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 137   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 138   1            | P1MDOUT_B7__OPEN_DRAIN;
 139   1        // [P1MDOUT - Port 1 Output Mode]$
 140   1      
 141   1        // $[P1MDIN - Port 1 Input Mode]
 142   1        // [P1MDIN - Port 1 Input Mode]$
 143   1      
 144   1        // $[P1SKIP - Port 1 Skip]
 145   1        // [P1SKIP - Port 1 Skip]$
 146   1      
 147   1        // $[P1MASK - Port 1 Mask]
 148   1        // [P1MASK - Port 1 Mask]$
 149   1      
 150   1        // $[P1MAT - Port 1 Match]
 151   1        // [P1MAT - Port 1 Match]$
 152   1      
 153   1      }
 154          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    100    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

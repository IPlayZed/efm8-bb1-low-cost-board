C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 13:27:45 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\shift\shift1\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNIN
                    -GLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\mic
                    -lab-zh-1\efm8-bb1-low-cost-board\shift\shift1\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/
                    -shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDev
                    -ice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_0_enter_DefaultMode_from_RESET ();
  28   1        PORTS_1_enter_DefaultMode_from_RESET ();
  29   1        PORTS_2_enter_DefaultMode_from_RESET ();
  30   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  31   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  32   1        // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          extern void
  37          WDT_0_enter_DefaultMode_from_RESET (void)
  38          {
  39   1        // $[Watchdog Timer Init Variable Declarations]
  40   1        uint32_t i;
  41   1        bool ea;
  42   1        // [Watchdog Timer Init Variable Declarations]$
  43   1      
  44   1        // $[WDTCN - Watchdog Timer Control]
  45   1        // Deprecated
  46   1        // [WDTCN - Watchdog Timer Control]$
  47   1      
  48   1        // $[WDTCN_2 - Watchdog Timer Control]
  49   1      
  50   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  51   1        WDTCN = 0xA5;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 13:27:45 PAGE 2   

  52   1      
  53   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  54   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  55   1          {
  56   2            NOP ();
  57   2          }
  58   1      
  59   1        // Disable WDT
  60   1        ea = IE_EA;
  61   1        IE_EA = 0;
  62   1        WDTCN = 0xDE;
  63   1        WDTCN = 0xAD;
  64   1        IE_EA = ea;
  65   1      
  66   1        // [WDTCN_2 - Watchdog Timer Control]$
  67   1      
  68   1      }
  69          
  70          extern void
  71          PBCFG_0_enter_DefaultMode_from_RESET (void)
  72          {
  73   1        // $[XBR2 - Port I/O Crossbar 2]
  74   1        /***********************************************************************
  75   1         - Weak Pullups enabled 
  76   1         - Crossbar enabled
  77   1         ***********************************************************************/
  78   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  79   1        // [XBR2 - Port I/O Crossbar 2]$
  80   1      
  81   1        // $[PRTDRV - Port Drive Strength]
  82   1        // [PRTDRV - Port Drive Strength]$
  83   1      
  84   1        // $[XBR0 - Port I/O Crossbar 0]
  85   1        // [XBR0 - Port I/O Crossbar 0]$
  86   1      
  87   1        // $[XBR1 - Port I/O Crossbar 1]
  88   1        // [XBR1 - Port I/O Crossbar 1]$
  89   1      
  90   1      }
  91          
  92          extern void
  93          PORTS_1_enter_DefaultMode_from_RESET (void)
  94          {
  95   1        // $[P1 - Port 1 Pin Latch]
  96   1        // [P1 - Port 1 Pin Latch]$
  97   1      
  98   1        // $[P1MDOUT - Port 1 Output Mode]
  99   1        /***********************************************************************
 100   1         - P1.0 output is open-drain
 101   1         - P1.1 output is open-drain
 102   1         - P1.2 output is open-drain
 103   1         - P1.3 output is open-drain
 104   1         - P1.4 output is open-drain
 105   1         - P1.5 output is open-drain
 106   1         - P1.6 output is push-pull
 107   1         - P1.7 output is push-pull
 108   1         ***********************************************************************/
 109   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 110   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 111   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__PUSH_PULL;
 112   1        // [P1MDOUT - Port 1 Output Mode]$
 113   1      
 114   1        // $[P1MDIN - Port 1 Input Mode]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 13:27:45 PAGE 3   

 115   1        // [P1MDIN - Port 1 Input Mode]$
 116   1      
 117   1        // $[P1SKIP - Port 1 Skip]
 118   1        // [P1SKIP - Port 1 Skip]$
 119   1      
 120   1        // $[P1MASK - Port 1 Mask]
 121   1        // [P1MASK - Port 1 Mask]$
 122   1      
 123   1        // $[P1MAT - Port 1 Match]
 124   1        // [P1MAT - Port 1 Match]$
 125   1      
 126   1      }
 127          
 128          extern void
 129          PORTS_2_enter_DefaultMode_from_RESET (void)
 130          {
 131   1        // $[P2 - Port 2 Pin Latch]
 132   1        // [P2 - Port 2 Pin Latch]$
 133   1      
 134   1        // $[P2MDOUT - Port 2 Output Mode]
 135   1        /***********************************************************************
 136   1         - P2.0 output is open-drain
 137   1         - P2.1 output is push-pull
 138   1         ***********************************************************************/
 139   1        P2MDOUT = P2MDOUT_B0__OPEN_DRAIN | P2MDOUT_B1__PUSH_PULL;
 140   1        // [P2MDOUT - Port 2 Output Mode]$
 141   1      
 142   1      }
 143          
 144          extern void
 145          PORTS_0_enter_DefaultMode_from_RESET (void)
 146          {
 147   1        // $[P0 - Port 0 Pin Latch]
 148   1        // [P0 - Port 0 Pin Latch]$
 149   1      
 150   1        // $[P0MDOUT - Port 0 Output Mode]
 151   1        /***********************************************************************
 152   1         - P0.0 output is open-drain
 153   1         - P0.1 output is push-pull
 154   1         - P0.2 output is push-pull
 155   1         - P0.3 output is open-drain
 156   1         - P0.4 output is open-drain
 157   1         - P0.5 output is open-drain
 158   1         - P0.6 output is open-drain
 159   1         - P0.7 output is open-drain
 160   1         ***********************************************************************/
 161   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__PUSH_PULL
 162   1            | P0MDOUT_B2__PUSH_PULL | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__OPEN_DRAIN
 163   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
 164   1            | P0MDOUT_B7__OPEN_DRAIN;
 165   1        // [P0MDOUT - Port 0 Output Mode]$
 166   1      
 167   1        // $[P0MDIN - Port 0 Input Mode]
 168   1        // [P0MDIN - Port 0 Input Mode]$
 169   1      
 170   1        // $[P0SKIP - Port 0 Skip]
 171   1        // [P0SKIP - Port 0 Skip]$
 172   1      
 173   1        // $[P0MASK - Port 0 Mask]
 174   1        // [P0MASK - Port 0 Mask]$
 175   1      
 176   1        // $[P0MAT - Port 0 Match]
 177   1        // [P0MAT - Port 0 Match]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 13:27:45 PAGE 4   

 178   1      
 179   1      }
 180          
 181          extern void
 182          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 183          {
 184   1        // $[CKCON0 - Clock Control 0]
 185   1        // [CKCON0 - Clock Control 0]$
 186   1      
 187   1        // $[TMOD - Timer 0/1 Mode]
 188   1        /***********************************************************************
 189   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 190   1         - Mode 0, 13-bit Counter/Timer
 191   1         - Timer Mode
 192   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 193   1         - Timer Mode
 194   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 195   1         ***********************************************************************/
 196   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 197   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 198   1        // [TMOD - Timer 0/1 Mode]$
 199   1      
 200   1        // $[TCON - Timer 0/1 Control]
 201   1        /***********************************************************************
 202   1         - Start Timer 0 running
 203   1         ***********************************************************************/
 204   1        TCON |= TCON_TR0__RUN;
 205   1        // [TCON - Timer 0/1 Control]$
 206   1      
 207   1      }
 208          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    114    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

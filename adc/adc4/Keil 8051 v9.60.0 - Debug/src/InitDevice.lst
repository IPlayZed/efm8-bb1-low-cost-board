C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\adc\adc4\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEV
                    -EL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\miclab-
                    -zh-1\efm8-bb1-low-cost-board\adc\adc4\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/s
                    -i8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst)
                    - COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_1_enter_DefaultMode_from_RESET ();
  28   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  29   1        ADC_0_enter_DefaultMode_from_RESET ();
  30   1        VREF_0_enter_DefaultMode_from_RESET ();
  31   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  33   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  34   1        // [Config Calls]$
  35   1      
  36   1      }
  37          
  38          extern void
  39          WDT_0_enter_DefaultMode_from_RESET (void)
  40          {
  41   1        // $[Watchdog Timer Init Variable Declarations]
  42   1        uint32_t i;
  43   1        bool ea;
  44   1        // [Watchdog Timer Init Variable Declarations]$
  45   1      
  46   1        // $[WDTCN - Watchdog Timer Control]
  47   1        // Deprecated
  48   1        // [WDTCN - Watchdog Timer Control]$
  49   1      
  50   1        // $[WDTCN_2 - Watchdog Timer Control]
  51   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 2   

  52   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  53   1        WDTCN = 0xA5;
  54   1      
  55   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  56   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  57   1          {
  58   2            NOP ();
  59   2          }
  60   1      
  61   1        // Disable WDT
  62   1        ea = IE_EA;
  63   1        IE_EA = 0;
  64   1        WDTCN = 0xDE;
  65   1        WDTCN = 0xAD;
  66   1        IE_EA = ea;
  67   1      
  68   1        // [WDTCN_2 - Watchdog Timer Control]$
  69   1      
  70   1      }
  71          
  72          extern void
  73          PORTS_1_enter_DefaultMode_from_RESET (void)
  74          {
  75   1        // $[P1 - Port 1 Pin Latch]
  76   1        // [P1 - Port 1 Pin Latch]$
  77   1      
  78   1        // $[P1MDOUT - Port 1 Output Mode]
  79   1        // [P1MDOUT - Port 1 Output Mode]$
  80   1      
  81   1        // $[P1MDIN - Port 1 Input Mode]
  82   1        /***********************************************************************
  83   1         - P1.0 pin is configured for digital mode
  84   1         - P1.1 pin is configured for digital mode
  85   1         - P1.2 pin is configured for digital mode
  86   1         - P1.3 pin is configured for digital mode
  87   1         - P1.4 pin is configured for digital mode
  88   1         - P1.5 pin is configured for digital mode
  89   1         - P1.6 pin is configured for digital mode
  90   1         - P1.7 pin is configured for analog mode
  91   1         ***********************************************************************/
  92   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
  93   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
  94   1            | P1MDIN_B6__DIGITAL | P1MDIN_B7__ANALOG;
  95   1        // [P1MDIN - Port 1 Input Mode]$
  96   1      
  97   1        // $[P1SKIP - Port 1 Skip]
  98   1        /***********************************************************************
  99   1         - P1.0 pin is not skipped by the crossbar
 100   1         - P1.1 pin is not skipped by the crossbar
 101   1         - P1.2 pin is not skipped by the crossbar
 102   1         - P1.3 pin is not skipped by the crossbar
 103   1         - P1.4 pin is not skipped by the crossbar
 104   1         - P1.5 pin is not skipped by the crossbar
 105   1         - P1.6 pin is not skipped by the crossbar
 106   1         - P1.7 pin is skipped by the crossbar
 107   1         ***********************************************************************/
 108   1        P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 109   1            | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__NOT_SKIPPED
 110   1            | P1SKIP_B5__NOT_SKIPPED | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__SKIPPED;
 111   1        // [P1SKIP - Port 1 Skip]$
 112   1      
 113   1        // $[P1MASK - Port 1 Mask]
 114   1        // [P1MASK - Port 1 Mask]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 3   

 115   1      
 116   1        // $[P1MAT - Port 1 Match]
 117   1        // [P1MAT - Port 1 Match]$
 118   1      
 119   1      }
 120          
 121          extern void
 122          PBCFG_0_enter_DefaultMode_from_RESET (void)
 123          {
 124   1        // $[XBR2 - Port I/O Crossbar 2]
 125   1        /***********************************************************************
 126   1         - Weak Pullups enabled 
 127   1         - Crossbar enabled
 128   1         ***********************************************************************/
 129   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 130   1        // [XBR2 - Port I/O Crossbar 2]$
 131   1      
 132   1        // $[PRTDRV - Port Drive Strength]
 133   1        // [PRTDRV - Port Drive Strength]$
 134   1      
 135   1        // $[XBR0 - Port I/O Crossbar 0]
 136   1        // [XBR0 - Port I/O Crossbar 0]$
 137   1      
 138   1        // $[XBR1 - Port I/O Crossbar 1]
 139   1        // [XBR1 - Port I/O Crossbar 1]$
 140   1      
 141   1      }
 142          
 143          extern void
 144          VREF_0_enter_DefaultMode_from_RESET (void)
 145          {
 146   1        // $[REF0CN - Voltage Reference Control]
 147   1        /***********************************************************************
 148   1         - Disable the Temperature Sensor
 149   1         - The ADC0 ground reference is the GND pin
 150   1         - The internal reference operates at 1.65 V nominal
 151   1         - The ADC0 voltage reference is the VDD pin
 152   1         ***********************************************************************/
 153   1        REF0CN = REF0CN_TEMPE__TEMP_DISABLED | REF0CN_GNDSL__GND_PIN
 154   1            | REF0CN_IREFLVL__1P65 | REF0CN_REFSL__VDD_PIN;
 155   1        // [REF0CN - Voltage Reference Control]$
 156   1      
 157   1      }
 158          
 159          extern void
 160          CLOCK_0_enter_DefaultMode_from_RESET (void)
 161          {
 162   1        // $[CLKSEL - Clock Select]
 163   1        /***********************************************************************
 164   1         - Clock derived from the Internal High-Frequency Oscillator
 165   1         - SYSCLK is equal to selected clock source divided by 1
 166   1         ***********************************************************************/
 167   1        CLKSEL = CLKSEL_CLKSL__HFOSC | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 168   1        // [CLKSEL - Clock Select]$
 169   1      
 170   1      }
 171          
 172          extern void
 173          TIMER16_2_enter_DefaultMode_from_RESET (void)
 174          {
 175   1        // $[Timer Initialization]
 176   1        // Save Timer Configuration
 177   1        uint8_t TMR2CN0_TR2_save;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 4   

 178   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 179   1        // Stop Timer
 180   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 181   1        // [Timer Initialization]$
 182   1      
 183   1        // $[TMR2CN0 - Timer 2 Control]
 184   1        // [TMR2CN0 - Timer 2 Control]$
 185   1      
 186   1        // $[TMR2H - Timer 2 High Byte]
 187   1        // [TMR2H - Timer 2 High Byte]$
 188   1      
 189   1        // $[TMR2L - Timer 2 Low Byte]
 190   1        // [TMR2L - Timer 2 Low Byte]$
 191   1      
 192   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 193   1        /***********************************************************************
 194   1         - Timer 2 Reload High Byte = 0xF8
 195   1         ***********************************************************************/
 196   1        TMR2RLH = (0xF8 << TMR2RLH_TMR2RLH__SHIFT);
 197   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 198   1      
 199   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 200   1        /***********************************************************************
 201   1         - Timer 2 Reload Low Byte = 0x06
 202   1         ***********************************************************************/
 203   1        TMR2RLL = (0x06 << TMR2RLL_TMR2RLL__SHIFT);
 204   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 205   1      
 206   1        // $[TMR2CN0]
 207   1        /***********************************************************************
 208   1         - Start Timer 2 running
 209   1         ***********************************************************************/
 210   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 211   1        // [TMR2CN0]$
 212   1      
 213   1        // $[Timer Restoration]
 214   1        // Restore Timer Configuration
 215   1        TMR2CN0 |= TMR2CN0_TR2_save;
 216   1        // [Timer Restoration]$
 217   1      
 218   1      }
 219          
 220          extern void
 221          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 222          {
 223   1        // $[EIE1 - Extended Interrupt Enable 1]
 224   1        /***********************************************************************
 225   1         - Enable interrupt requests generated by the ADINT flag
 226   1         - Disable ADC0 Window Comparison interrupt
 227   1         - Disable CP0 interrupts
 228   1         - Disable CP1 interrupts
 229   1         - Disable all Port Match interrupts
 230   1         - Disable all PCA0 interrupts
 231   1         - Disable all SMB0 interrupts
 232   1         - Disable Timer 3 interrupts
 233   1         ***********************************************************************/
 234   1        EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 235   1            | EIE1_ECP1__DISABLED | EIE1_EMAT__DISABLED | EIE1_EPCA0__DISABLED
 236   1            | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 237   1        // [EIE1 - Extended Interrupt Enable 1]$
 238   1      
 239   1        // $[EIP1 - Extended Interrupt Priority 1]
 240   1        // [EIP1 - Extended Interrupt Priority 1]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 5   

 241   1      
 242   1        // $[IE - Interrupt Enable]
 243   1        /***********************************************************************
 244   1         - Enable each interrupt according to its individual mask setting
 245   1         - Disable external interrupt 0
 246   1         - Disable external interrupt 1
 247   1         - Disable all SPI0 interrupts
 248   1         - Disable all Timer 0 interrupt
 249   1         - Disable all Timer 1 interrupt
 250   1         - Disable Timer 2 interrupt
 251   1         - Disable UART0 interrupt
 252   1         ***********************************************************************/
 253   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 254   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 255   1            | IE_ES0__DISABLED;
 256   1        // [IE - Interrupt Enable]$
 257   1      
 258   1        // $[IP - Interrupt Priority]
 259   1        // [IP - Interrupt Priority]$
 260   1      
 261   1      }
 262          
 263          extern void
 264          ADC_0_enter_DefaultMode_from_RESET (void)
 265          {
 266   1        // $[ADC0CN1 - ADC0 Control 1]
 267   1        // [ADC0CN1 - ADC0 Control 1]$
 268   1      
 269   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 270   1        /***********************************************************************
 271   1         - Select ADC0.15
 272   1         ***********************************************************************/
 273   1        ADC0MX = ADC0MX_ADC0MX__ADC0P15;
 274   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 275   1      
 276   1        // $[ADC0CF - ADC0 Configuration]
 277   1        /***********************************************************************
 278   1         - SAR Clock Divider = 0x03
 279   1         - ADC0 operates in 10-bit or 12-bit mode 
 280   1         - The on-chip PGA gain is 1
 281   1         - Normal Track Mode
 282   1         ***********************************************************************/
 283   1        ADC0CF = (0x03 << ADC0CF_ADSC__SHIFT) | ADC0CF_AD8BE__NORMAL
 284   1            | ADC0CF_ADGN__GAIN_1 | ADC0CF_ADTM__TRACK_NORMAL;
 285   1        // [ADC0CF - ADC0 Configuration]$
 286   1      
 287   1        // $[ADC0AC - ADC0 Accumulator Configuration]
 288   1        /***********************************************************************
 289   1         - Right justified. No shifting applied
 290   1         - Enable 12-bit mode
 291   1         - ADC0H:ADC0L contain the result of the latest conversion when Burst
 292   1         Mode is disabled
 293   1         - Perform and Accumulate 4 conversions 
 294   1         ***********************************************************************/
 295   1        ADC0AC = ADC0AC_ADSJST__RIGHT_NO_SHIFT | ADC0AC_AD12BE__12_BIT_ENABLED
 296   1            | ADC0AC_ADAE__ACC_DISABLED | ADC0AC_ADRPT__ACC_4;
 297   1        // [ADC0AC - ADC0 Accumulator Configuration]$
 298   1      
 299   1        // $[ADC0TK - ADC0 Burst Mode Track Time]
 300   1        // [ADC0TK - ADC0 Burst Mode Track Time]$
 301   1      
 302   1        // $[ADC0PWR - ADC0 Power Control]
 303   1        // [ADC0PWR - ADC0 Power Control]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        10/25/2021 00:34:51 PAGE 6   

 304   1      
 305   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 306   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 307   1      
 308   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 309   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 310   1      
 311   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 312   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 313   1      
 314   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 315   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 316   1      
 317   1        // $[ADC0CN0 - ADC0 Control 0]
 318   1        /***********************************************************************
 319   1         - Enable ADC0 
 320   1         - Enable ADC0 burst mode
 321   1         - ADC0 conversion initiated on overflow of Timer 2
 322   1         ***********************************************************************/
 323   1        ADC0CN0 &= ~ADC0CN0_ADCM__FMASK;
 324   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADBMEN__BURST_ENABLED
 325   1            | ADC0CN0_ADCM__TIMER2;
 326   1        // [ADC0CN0 - ADC0 Control 0]$
 327   1      
 328   1      }
 329          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    158    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

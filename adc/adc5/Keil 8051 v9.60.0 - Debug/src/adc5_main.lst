C51 COMPILER V9.60.0.0   ADC5_MAIN                                                         10/25/2021 09:55:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ADC5_MAIN
OBJECT MODULE PLACED IN .\src\adc5_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\kovac\D
                    -esktop\miclab-zh-1\efm8-bb1-low-cost-board\adc\adc5\src\adc5_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVE
                    -L(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kovac\Desktop\miclab-z
                    -h-1\efm8-bb1-low-cost-board\adc\adc5\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si
                    -8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8BB1/inc) PRINT(.\src\adc5_main.lst) C
                    -OND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\adc5_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/adc5_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include "math.h"
  15          // $[Generated Includes]
  16          // [Generated Includes]$
  17          
  18          // Global constants
  19          #define ZERO 0
  20          #define ONE 1
  21          
  22          //values for resistor and adc calculation
  23          #define RESOLUTION 4096.0
  24          #define VREF 3.3
  25          #define R0 10000.0
  26          #define LSB_CONSTANT (VREF/RESOLUTION)
  27          
  28          // values for termistor
  29          #define T25 298.15
  30          #define B2585 3977.0
  31          
  32          // Global variables
  33          extern volatile uint32_t adc0_data;
  34          extern volatile uint16_t counter;
  35          float Volts = 0;
  36          float Resistor = 0;
  37          float Kelvin = 0;
  38          float Celsius = 0;
  39          float sum = 0;
  40          uint16_t adc0_data_sum = 0;
  41          float average = 0;
  42          
  43          //-----------------------------------------------------------------------------
  44          // SiLabs_Startup() Routine
  45          // ----------------------------------------------------------------------------
  46          // This function is called immediately after reset, before the initialization
  47          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  48          // useful place to disable the watchdog timer, which is enable by default
  49          // and may trigger before main() in some instances.
  50          //-----------------------------------------------------------------------------
  51          void SiLabs_Startup (void)
C51 COMPILER V9.60.0.0   ADC5_MAIN                                                         10/25/2021 09:55:57 PAGE 2   

  52          {
  53   1        // $[SiLabs Startup]
  54   1        // [SiLabs Startup]$
  55   1      }
  56          /*
  57          uint16_t get_sum (uint16_t adc0_data) {
  58            sum += adc0_data;
  59            return sum;
  60          }
  61          */
  62          float ADC0InVolts (uint32_t adc0_data) {
  63   1        return (adc0_data * LSB_CONSTANT);
  64   1      }
  65          
  66          float get_resistor_value (float Volts) {
  67   1        return ((Volts*R0)/(VREF-Volts));
  68   1      }
  69          
  70          float get_temperature_K (float Resistor) {
  71   1        return (1/((1/T25)+(1/B2585)*(log(Resistor/R0))));
  72   1      }
  73          
  74          float get_celsius (float Kelvin) {
  75   1        return Kelvin - 273.15;
  76   1      }
  77          
  78          //-----------------------------------------------------------------------------
  79          // main() Routine
  80          // ----------------------------------------------------------------------------
  81          int main (void)
  82          {
  83   1        // Call hardware initialization routine
  84   1        enter_DefaultMode_from_RESET();
  85   1        
  86   1        while (1) 
  87   1        {
  88   2          // $[Generated Run-time code]
  89   2          // [Generated Run-time code]$
  90   2      
  91   2            if (counter == 1000) {
  92   3                TMR2CN0_TR2 = ZERO;
  93   3            }
  94   2      
  95   2      
  96   2            average = adc0_data/1000;
  97   2            //adc0_data_sum = get_sum(adc0_data);
  98   2            Volts = ADC0InVolts(average);
  99   2            Resistor = get_resistor_value(Volts);
 100   2            Kelvin = get_temperature_K(Resistor);
 101   2            Celsius = get_celsius(Kelvin);
 102   2        }                             
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    256    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   ADC5_MAIN                                                         10/25/2021 09:55:57 PAGE 3   

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
